{
	"name": "mvt",
	"scopeName": "source.mvt",
	"repository": {
		"mv-expression-or-literal": {
			"patterns": [
				{"include": "#mv-expression"},
				{"include": "#mv-literal"}
			]
		},

		"mv-expression-or-var": {
			"patterns": [
				{"include": "#mv-expression"},
				{
					"begin": "\\\"",
					"end": "\\\"",
					"patterns": [
						{"include": "#mv-var"}
					]
				}
			]
		},

		"mv-expression-or-db": {
			"patterns": [
				{"include": "#mv-expression"},
				{"include": "#mv-var"}
			]
		},

		"mv-expression-or-number": {
			"patterns": [
				{"include": "#mv-expression"},
				{"include": "#number"},
				{"include": "#numeric-string"}
			]
		},

		"mv-expression-or-sql": {
			"patterns": [
				{"include": "#mv-expression"},
				{"include": "#mv-sql"}
			]
		},
		
		"mv-expression-or-var-list": {
			"patterns": [
				{"include": "#mv-expression"},
				{"include": "#mv-var-list"}
			]
		},

		"mv-literal": {
			"patterns": [
				{"include": "#number"},
				{"include": "#numeric-string"},
				{"include": "#string-double-quoted"}
			]
		},

		"mv-sql": {
			"begin": "\"",
			"beginCaptures": {
				"0": {"name": "punctuation.definition.string.begin.html"}
			},
			"end": "\"",
			"endCaptures": {
				"0": {"name": "punctuation.definition.string.end.html"}
			},
			"patterns": [
				{"include": "source.sql"}
			]
		},

		"mv-expression": {
			"name": "meta.expression.mv",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{"include": "#mv-naked-expression"}
			]
		},

		"mv-naked-expression": {
			"name": "meta.expression.mv",
			"patterns": [
				{"include": "#number"},
				{"include": "#string-single-quoted"},
				{
					"name": "keyword.control",
					"match": "\\+\\+|--|NOT|ROUND|CRYPT|MOD|SUBSTR|POW|/|\\*|\\+|\\-|\\$|IN|CIN|EIN|ECIN|EQ|NE|GE|LE|LT|GT|ISNULL|AND|OR"
				},
				{"include": "#mv-function-call"},
				{"include": "#mv-var"}
			]
		},

		"mv-var-list": {
			"name": "meta.parameters.mv",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"match": "var",
					"name": "keyword"
				},
				{
					"include": "#mv-var"
				},
				{
					"name": "punctuation.separator.parameter.mv",
					"match": ","
				}
			]
		},

		"mv-var": {
			"patterns": [
				{
					"match": "(l\\.settings|l\\.|g\\.)([\\w:_\\[\\]]+)",
					"captures": {
						"1": {"name": "keyword"},
						"2": {"include": "#mv-var-inner"}
					}
				}
			]
		},

		"mv-var-inner": {
			"patterns": [
				{
					"match": "[\\w:_\\[\\]]+"
				}
			]
		},

		"mv-function-call": {
			"patterns": [
				{
					"begin": "([\\w_]+\\s*\\()",
					"beginCaptures": {
						"1": {"name": "entity.name.function"}
					},
					"end": "(\\))",
					"endCaptures": {
						"1": {"name": "entity.name.function"}
					},
					"patterns": [
						{"include": "#mv-naked-expression"},
						{"match": ",", "name": "punctuation.separator.parameter.mv"}
					]
				}
			]
		},

		"tag-generic-attribute": {
			"patterns": [
				{"include": "#mvt-tag"},
				{
					"name": "markup.italic",
					"match": "(itemprop|itemscope|itemtype|itemid)",
					"captures": {
						"1": {"name": "entity.name.tag.inline.any.htm"}
					}
				},
				{
					"match": "(?<=[^=])\\b([a-zA-Z0-9:-]+)",
					"name": "entity.other.attribute-name.html"
				}
			]
		},

		"number": {
			"name": "constant.numeric.decimal",
			"match": "\\d+"
		},
		
		"numeric-string": {
			"name": "constant.numeric.decimal",
			"begin": "\"(?=\\d+\")",
			"beginCaptures": {
				"0": {"name": "constant.numeric.decimal"}
			},
			"end": "\"",
			"endCaptures": {
				"0": {"name": "constant.numeric.decimal"}
			}
		},

		"embedded-code": {
			"patterns": [
				{
					"include": "#smarty"
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"name": "constant.numeric.decimal.mvt",
					"begin": "(&)mvt[eajs]?:(global)?(?=[^\\.]*;)",
					"beginCaptures": {
						"2": {"name": "keyword"}
					},
					"end": "(;)",
					"patterns": [
						{"include": "#mv-var-inner"}
					]
				},
				{
					"name": "invalid.illegal",
					"match": "(&)mvt[eajs]?:[\\w_\\d+:_\\.\\[\\]]+"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.entity.html"
						},
						"3": {
							"name": "punctuation.definition.entity.html"
						}
					},
					"match": "(&)([a-zA-Z0-9]+|#[0-9]+|#[xX][0-9a-fA-F]+)(;)",
					"name": "constant.character.entity.html"
				},
				{
					"match": "&",
					"name": "invalid.illegal.bad-ampersand.html"
				}
			]
		},
		"python": {
			"begin": "(?:^\\s*)<\\?python(?!.*\\?>)",
			"end": "\\?>(?:\\s*$\\n)?",
			"name": "source.python.embedded.html",
			"patterns": [
				{
					"include": "source.python"
				}
			]
		},
		"smarty": {
			"patterns": [
				{
					"begin": "(\\{(literal)\\})",
					"captures": {
						"1": {
							"name": "source.smarty.embedded.html"
						},
						"2": {
							"name": "support.function.built-in.smarty"
						}
					},
					"end": "(\\{/(literal)\\})"
				},
				{
					"begin": "{{|{",
					"disabled": 1,
					"end": "}}|}",
					"name": "source.smarty.embedded.html",
					"patterns": [
						{
							"include": "source.smarty"
						}
					]
				}
			]
		},
		"string-double-quoted": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.html"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.html"
				}
			},
			"name": "string.quoted.double.html",
			"patterns": [
				{
					"include": "#embedded-code"
				},
				{
					"include": "#entities"
				}
			]
		},
		"html-string-double-quoted": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.html"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.html"
				}
			},
			"name": "string.quoted.double.html",
			"patterns": [
				{
					"include": "#mvt-tag"
				},
				{
					"include": "#entities"
				}
			]
		},
		"string-single-quoted": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.html"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.html"
				}
			},
			"name": "string.quoted.single.html",
			"patterns": [
				{
					"include": "#embedded-code"
				},
				{
					"include": "#entities"
				}
			]
		},
		"tag-stuff": {
			"patterns": [
				{
					"include": "#tag-generic-attribute"
				},
				{
					"include": "#html-string-double-quoted"
				},
				{
					"include": "#string-single-quoted"
				},
				{
					"include": "#embedded-code"
				},
				{
					"include": "#unquoted-attribute"
				}
			]
		},
		"unquoted-attribute": {
			"match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
			"name": "string.unquoted.html"
		},
		"mvt-tag": {
			"patterns": [
				{
					"name": "meta.tag.any.mvt.foreach",
					"begin": "(?i)(</?)(mvt:foreach)(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(iterator|array)\\s*=\\s*(\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-var"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "meta.tag.any.mvt.while",
					"begin": "(?i)(</?)(mvt:while)(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(expr)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-expression"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "meta.tag.any.mvt.item",
					"begin": "(?i)(</?)(mvt:item)(?=\\s*name\\s*=\\s*\"(readytheme|customfields)\")(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(name|file)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#string-double-quoted"}
							]
						},
						{
							"begin": "(?i)\\s+(param)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-expression"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "meta.tag.any.mvt.call",
					"begin": "(?i)(</?)(mvt:call)(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(method)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#string-double-quoted"}
							]
						},
						{
							"begin": "(?i)\\s+(action|content-type|files|certfile|certtype|certpass|timeout|headers)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-expression-or-literal"}
							]
						},
						{
							"begin": "(?i)\\s+(fields)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-expression-or-var-list"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "meta.tag.any.mvt.item",
					"begin": "(?i)(</?)(mvt:item)(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(name|param|file)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#string-double-quoted"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "meta.tag.any.mvt.if",
					"begin": "(?i)(</?)(mvt:if)(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(expr)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-expression"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "meta.tag.any.mvt.if",
					"begin": "(?i)(</?)(mvt:eval)(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(expr)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-expression"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "meta.tag.any.mvt.elseif",
					"begin": "(?i)(<)(mvt:elseif)(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(expr)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-expression"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "meta.tag.any.else",
					"match": "(?i)(<)(mvt:else|mvt:callstop|mvt:callcontinue|mvt:foreachcontinue|mvt:foreachstop|mvt:whilestop|mvt:whilecontinue)\\s*(/?>)",
					"captures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"},
						"4": {"name": "punctuation.definition.tag.end.html"}
					}
				},
				{
					"name": "meta.tag.any.mvt.dp",
					"begin": "(?i)(</?)(mvt:do)(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(file|value)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-expression"}
							]
						},
						{
							"begin": "(?i)\\s+(name)\\s*=\\s*(\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-var"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "meta.tag.any.mvt.assign",
					"begin": "(?i)(</?)(mvt:assign)(?=[>\\s])",
					"beginCaptures": {
						"1": {"name": "punctuation.definition.tag.begin.html"},
						"2": {"name": "constant.character.set.regexp.mvt"},
						"3": {"name": "punctuation.definition.tag.end.html"}
					},
					"end": "(/?>)",
					"endCaptures": {
						"1": {"name": "punctuation.definition.tag.end.html"}
					},
					"patterns": [
						{
							"begin": "(?i)\\s+(name)\\s*=\\s*\"",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "\"",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-var"}
							]
						},
						{
							"begin": "(?i)\\s+(value)\\s*=\\s*(?=\")",
							"beginCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"end": "(?<=\")",
							"endCaptures": {
								"1": {"name": "punctuation.definition.tag"}
							},
							"patterns": [
								{"include": "#mv-expression"}
							]
						},
						{
							"name": "invalid.illegal",
							"match": "."
						}
					]
				},
				{
					"name": "comment.block.mv",
					"begin": "(?i)<mvt:comment>",
					"beginCaptures": {
						"0": {"name": "punctuation.definition.comment.html"}
					},
					"end": "(?i)</mvt:comment>",
					"endCaptures": {
						"0": {"name": "punctuation.definition.comment.html"}
					}
				}
			]
		}
	},
	"patterns": [
		{"include": "#mvt-tag"},
		{
			"begin": "(<)([a-zA-Z][a-zA-Z0-9:-]*)(?=[^>]*></\\2>)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.html"
				}
			},
			"end": "(>(<)/)(\\2)(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "meta.scope.between-tag-pair.html"
				},
				"3": {
					"name": "entity.name.tag.html"
				},
				"4": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"name": "meta.tag.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(<\\?)(xml)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.xml.html"
				}
			},
			"end": "(\\?>)",
			"name": "meta.tag.preprocessor.xml.html",
			"patterns": [
				{
					"include": "#tag-generic-attribute"
				},
				{
					"include": "#string-double-quoted"
				},
				{
					"include": "#string-single-quoted"
				}
			]
		},
		{
			"begin": "<!--",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.html"
				}
			},
			"end": "--\\s*>",
			"name": "comment.block.html",
			"patterns": [
				{
					"match": "--",
					"name": "invalid.illegal.bad-comments-or-CDATA.html"
				},
				{
					"include": "#embedded-code"
				}
			]
		},
		{
			"begin": "<!",
			"captures": {
				"0": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"end": ">",
			"name": "meta.tag.sgml.html",
			"patterns": [
				{
					"begin": "(?i:DOCTYPE)",
					"captures": {
						"1": {
							"name": "entity.name.tag.doctype.html"
						}
					},
					"end": "(?=>)",
					"name": "meta.tag.sgml.doctype.html",
					"patterns": [
						{
							"match": "\"[^\">]*\"",
							"name": "string.quoted.double.doctype.identifiers-and-DTDs.html"
						}
					]
				},
				{
					"begin": "\\[CDATA\\[",
					"end": "]](?=>)",
					"name": "constant.other.inline-data.html"
				},
				{
					"match": "(\\s*)(?!--|>)\\S(\\s*)",
					"name": "invalid.illegal.bad-comments-or-CDATA.html"
				}
			]
		},
		{
			"include": "#embedded-code"
		},
		{
			"begin": "(^[ \\t]+)?(?=<(?i:style))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.leading.html"
				}
			},
			"end": "(?!\\G)([ \\t]*$\\n?)?",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.trailing.html"
				}
			},
			"patterns": [
				{
					"begin": "(<)((?i:style))\\b",
					"beginCaptures": {
						"0": {
							"name": "meta.tag.metadata.style.html"
						},
						"1": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"2": {
							"name": "entity.name.tag.html"
						}
					},
					"end": "(/>)|((<)/)((?i:style))(>)",
					"endCaptures": {
						"0": {
							"name": "meta.tag.metadata.style.html"
						},
						"1": {
							"name": "punctuation.definition.tag.end.html"
						},
						"2": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"3": {
							"name": "source.css"
						},
						"4": {
							"name": "entity.name.tag.html"
						},
						"5": {
							"name": "punctuation.definition.tag.end.html"
						}
					},
					"name": "meta.embedded.block.html",
					"patterns": [
						{
							"begin": "\\G",
							"captures": {
								"1": {
									"name": "punctuation.definition.tag.end.html"
								}
							},
							"end": "(?=/>)|(>)",
							"name": "meta.tag.metadata.style.html",
							"patterns": [
								{
									"include": "#tag-stuff"
								}
							]
						},
						{
							"begin": "(?!\\G)",
							"end": "(?=</(?i:style))",
							"name": "source.css",
							"patterns": [
								{
									"include": "#embedded-code"
								},
								{
									"include": "source.css"
								}
							]
						}
					]
				}
			]
		},
		{
			"begin": "(^[ \\t]+)?(?=<(?i:script))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.leading.html"
				}
			},
			"end": "(?!\\G)([ \\t]*$\\n?)?",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.trailing.html"
				}
			},
			"patterns": [
				{
					"begin": "(<)((?i:script))\\b",
					"beginCaptures": {
						"0": {
							"name": "meta.tag.metadata.script.html"
						},
						"1": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"2": {
							"name": "entity.name.tag.html"
						}
					},
					"end": "(/>)|(/)((?i:script))(>)",
					"endCaptures": {
						"0": {
							"name": "meta.tag.metadata.script.html"
						},
						"1": {
							"name": "punctuation.definition.tag.end.html"
						},
						"2": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"3": {
							"name": "entity.name.tag.html"
						},
						"4": {
							"name": "punctuation.definition.tag.end.html"
						}
					},
					"name": "meta.embedded.block.html",
					"patterns": [
						{
							"begin": "\\G",
							"end": "(?=/>|/)",
							"patterns": [
								{
									"begin": "(>)",
									"beginCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.html"
										},
										"1": {
											"name": "punctuation.definition.tag.end.html"
										}
									},
									"end": "((<))(?=/(?i:script))",
									"endCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.html"
										},
										"1": {
											"name": "punctuation.definition.tag.begin.html"
										},
										"2": {
											"name": "source.js"
										}
									},
									"patterns": [
										{
											"begin": "\\G",
											"end": "(?=</(?i:script))",
											"name": "source.js",
											"patterns": [
												{
													"begin": "(^[ \\t]+)?(?=//)",
													"beginCaptures": {
														"1": {
															"name": "punctuation.whitespace.comment.leading.js"
														}
													},
													"end": "(?!\\G)",
													"patterns": [
														{
															"begin": "//",
															"beginCaptures": {
																"0": {
																	"name": "punctuation.definition.comment.js"
																}
															},
															"end": "(?=</script)|\\n",
															"name": "comment.line.double-slash.js"
														}
													]
												},
												{
													"begin": "/\\*",
													"captures": {
														"0": {
															"name": "punctuation.definition.comment.js"
														}
													},
													"end": "\\*/|(?=</script)",
													"name": "comment.block.js"
												},
												{
													"include": "source.js"
												}
											]
										}
									]
								},
								{
									"begin": "\\G",
									"end": "(?i:(?=/?>|type(?=[\\s=])(?!\\s*=\\s*('|\"|)(text/(javascript|ecmascript|babel)|application/((x-)?javascript|ecmascript|babel)|module)[\\s\"'>])))",
									"name": "meta.tag.metadata.script.html",
									"patterns": [
										{
											"include": "#tag-stuff"
										}
									]
								},
								{
									"begin": "(?=(?i:type\\s*=\\s*('|\"|)(text/(x-handlebars|(x-(handlebars-)?|ng-)?template|html)[\\s\"'>])))",
									"end": "((<))(?=/(?i:script))",
									"endCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.html"
										},
										"1": {
											"name": "punctuation.definition.tag.begin.html"
										},
										"2": {
											"name": "text.html.basic"
										}
									},
									"patterns": [
										{
											"begin": "\\G",
											"end": "(>)|(?=/>)",
											"endCaptures": {
												"1": {
													"name": "punctuation.definition.tag.end.html"
												}
											},
											"name": "meta.tag.metadata.script.html",
											"patterns": [
												{
													"include": "#tag-stuff"
												}
											]
										},
										{
											"begin": "(?!\\G)",
											"end": "(?=</(?i:script))",
											"name": "text.html.basic",
											"patterns": [
												{
													"include": "text.html.basic"
												}
											]
										}
									]
								},
								{
									"begin": "(?=(?i:type))",
									"end": "(<)(?=/(?i:script))",
									"endCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.html"
										},
										"1": {
											"name": "punctuation.definition.tag.begin.html"
										}
									},
									"patterns": [
										{
											"begin": "\\G",
											"end": "(>)|(?=/>)",
											"endCaptures": {
												"1": {
													"name": "punctuation.definition.tag.end.html"
												}
											},
											"name": "meta.tag.metadata.script.html",
											"patterns": [
												{
													"include": "#tag-stuff"
												}
											]
										},
										{
											"begin": "(?!\\G)",
											"end": "(?=</(?i:script))",
											"name": "source.unknown"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"begin": "(</?)((?i:body|head|html)\\b)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.structure.any.html"
				}
			},
			"end": "(>)",
			"name": "meta.tag.structure.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(</?)((?i:address|blockquote|dd|div|section|article|aside|header|footer|nav|menu|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|pre)\\b)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.block.any.html"
				}
			},
			"end": "(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.block.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\\b(?!-))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.inline.any.html"
				}
			},
			"end": "((?: ?/)?>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.inline.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(</?)([a-zA-Z][a-zA-Z0-9:-]*)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.other.html"
				}
			},
			"end": "(/?>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.other.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"include": "#entities"
		},
		{
			"match": "<>",
			"name": "invalid.illegal.incomplete.html"
		}
	]
}